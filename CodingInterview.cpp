/*******************************************************************

Copyright(c) 2016, Harry He

All rights reserved.



Distributed under the BSD license.

(See accompanying file LICENSE.txt at

https://github.com/zhedahht/CodingInterviewChinese2/blob/master/LICENSE.txt)

*******************************************************************/

//==================================================================
// 《剑指Offer――名企面试官精讲典型编程题》代码
// 作者：何海涛
//==================================================================


// 面试题3（一）：找出数组中重复的数字
// 题目：在一个长度为n的数组里的所有数字都在0到n-1的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，
// 也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。例如，如果输入长度为7的数组{2, 3, 1, 0, 2, 5, 3}，
// 那么对应的输出是重复的数字2或者3。

#include <cstdio>


// 参数:
//        numbers:     一个整数数组
//        length:      数组的长度
//        duplication: (输出) 数组中的一个重复的数字
// 返回值:             
//        true  - 输入有效，并且数组中存在重复的数字
//        false - 输入无效，或者数组中没有重复的数字

//bool duplicate(int numbers[], int length, int* duplication)
//{
//	if (numbers == nullptr || length <= 0)
//		return false;
//
//	for (int i = 0; i < length; ++i)
//	{
//		if (numbers[i] < 0 || numbers[i] > length - 1)
//			return false;
//	}
//
//	for (int i = 0; i < length; ++i)
//	{
//		while (numbers[i] != i)
//		{
//			if (numbers[i] == numbers[numbers[i]])
//			{
//				*duplication = numbers[i];
//				return true;
//			}
//
//			//交换numbers[i]和numbers[numbers[i]]，将该数字放到它本该位置             
//			int temp = numbers[i];
//			numbers[i] = numbers[temp];
//			numbers[temp] = temp;
//		}
//	}
//
//	return false;
//}
